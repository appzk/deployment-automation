# 只有当 master 分支变更后才会触发接下来的操作
branches:
  only:
  - master
# 如果你仍然想将 master 作为主分支，而将发布分支命名为类似“v1.3”的方式，并且永久性保留这些分支，则可以
# 参考下面的正则表达式配置方式：
#
# branches:
#   only:
#   - /^v\d+\.\d+(\.\d+)?(-\S*)?$/
#
# 详情请参考 https://docs.travis-ci.com/user/customizing-the-build#Building-Specific-Branches

# Node.js 的基本配置
language: node_js
node_js:
- '8'
cache:
  directories: node_modules

# Travis 在全球都有部署服务器，在某些时候可能会无法正常连接到七牛的服务器
# 尝试了很多办法后，发现这个奇怪现象，只要执行一次 traceroute 连接就会比较通畅
before_install:
- sudo apt-get install traceroute
- traceroute uc.qbox.me

# 有一个好习惯是在云端再次执行一次测试，然后再打包上传
# 因此，我们保留下面的这个默认 script
script: npm run test

# Travis 本身支持在执行 script 成功后自动 deploy，只可惜七牛不在其支持的列表内
# 好在 Travis 支持通过 after_success 实现自定义部署
#
# 详情请参考 https://docs.travis-ci.com/user/deployment/custom/
after_success: npm run pub

# 在本例中，当 pub 执行成功后，我们自动更新 gh-pages 分支，即 github.io 的分支
#
# 详情请参考 https://docs.travis-ci.com/user/deployment/pages/
#
# 在真实情况下，应将 hash 传递给你自己的服务器集群，然后更新 js、css 等资源的引用
# 地址，从而完成部署
deploy:
  provider: pages
  local_dir: ./gh-pages
  skip_cleanup: true
  github_token: $GITHUB_TOKEN # 在 travis-ci.org 的 dashboard 中设置环境变量
  on:
    branch: master

# 以下为加密后的 QINIU_SK 环境标量，通过 travis 命令自动添加
# travis 是一个用 Rubby 编写的命令行工具，可通过以下命令安装（你可能需要先安装 gem）
# gem install travis --verbose
env:
  global:
    secure: yPvDZYfjYk4vBjav7d+L4IVdOO09eyUWtFLGFqs5dqOlfikQo2B9+zD42B12o0HOqhhe3Gj/NY6W9YPGls+gB5ocRXVz4EviBxEg/sEHKjp0Zj6qDu+WYUELVur+8xdpoNmT85AslEQnrTQUxsA0JukTvU1uO+CtYgDlbC0SOg1tSJA5yt8meWwbzCcrxRr5d4A0l9Y/3adMAwRrUHymDXPzdQI+OyS+xLDNAlAmOiqyHQdhzl+82Hse0hzPGkRpEAtqKXgTaS9KcMpAUM2DeDtjwdVjodI3M5FhERwVhPfzFpITnSyWd97Rc1KjPeA9y/ghXz3av/RvQSI1VCTdNKh6O6c3Osol6+zTuIBffHjY+Z4flFyrNJS+8snWhcFZxgeNAllvy9vJ7EyXUXSCkNlv6t100olosqwuzFJ5JEbwHdZ6a2zglxVx8Lz6jP7Y0YeBbtAMyB+hQD18lHBreKJ0eNjsqkmhjBvgDmTNgjf5qyxFN8ebGo/V8FqWwtEuV8d6jVxK10rkU98FaBlo33QNw0GtJFNhCGizHEj1GIv1FrkEG7qHBwq1gAV0j1Ym6MKx5NEUVG26Yc/ZI95nMuj13tKQLUtdlAoHj1lcUArubWaCltvQ/4J/PexK1q4X+0tzgokRepXB1zZY1LMdTXTyXMxCNamqOZBqjpXlS9I=
